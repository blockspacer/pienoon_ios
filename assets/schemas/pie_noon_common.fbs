// Copyright 2014 Google Inc. All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

namespace fpl.pie_noon;

enum RenderableId : ushort {
  Invalid,
  CharacterIdle,
  CharacterLoad1,
  CharacterLoad2,
  CharacterLoad3,
  CharacterThrow,
  CharacterBlock,
  CharacterHitByPieFrame0,
  CharacterHitByPieFrame1,
  CharacterHitByPieFrame2,
  CharacterHitByPieFrame3,
  CharacterKnockedOut,
  CharacterWin,
  PieEmpty,
  PieSmall,
  PieMedium,
  PieLarge,
  PieBlock,
  EnvironmentSky,
  EnvironmentCloud,
  EnvironmentCloudShadow,
  EnvironmentSun,
  EnvironmentSunGlow,
  EnvironmentTree,
  EnvironmentBush,
  EnvironmentString,
  EnvironmentStageFront,
  EnvironmentStageGround,
  EnvironmentStageEdge,
  EnvironmentStoreFront,
  EnvironmentStoreRoom,
  EnvironmentAmbientOcclusionShadow,
  Splatter1,
  Splatter2,
  Splatter3,
  Health,
  UiArrow,
  Pixel1x1,
  TargetReticle,

  Count  // Must be last
}

enum EventId : ushort {
  TakeDamage,
  ReleasePie,
  DeflectPie,
  JumpWhileJoining,
  LoadPie
}

enum Axis : ushort {
  X,
  Y,
  Z
}

struct Vec2i {
  x:int;
  y:int;
}

struct Vec2 {
  x:float;
  y:float;
}

struct Vec3 {
  x:float;
  y:float;
  z:float;
}

struct Vec4 {
  x:float;
  y:float;
  z:float;
  w:float;
}

struct Vec4ub {
  x:ubyte;
  y:ubyte;
  z:ubyte;
  w:ubyte;
}
