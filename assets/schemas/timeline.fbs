// Copyright 2014 Google Inc. All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

include "pie_noon_common.fbs"; // Required for enumerations used in PieNoon.

namespace fpl;

struct TimelineRenderable {
  time:ushort;        // Time of event. Time 0 is start of timeline.
  renderable:ushort;  // Identify the item to render.
                      // For PieNoon, use RenderableId in pie_noon_common.fbs.
}

struct PixelOffset {
  x:short;
  y:short;
}

struct TimelineAccessory {
  time:ushort;        // Time to start displaying accessory.
  end_time:ushort;    // Time to stop displaying accessory.
                      // 0 never stops the display of an accessory.
  renderable:ushort;  // Identify the accessory to render.
                      // For PieNoon, use RenderableId in pie_noon_common.fbs.
  offset:PixelOffset; // Offset in pixels from bottom left of renderable.
}

table TimelineSound {
  time:ushort;        // Time of event. Time 0 is start of timeline.
  sound:string;       // Identify the sound to start playing at 'time'.
                      // For PieNoon, use SoundId in pie_noon_common.fbs.
}

struct TimelineEvent {
  time:ushort;        // Time of event. Time 0 is start of timeline.
  event:ushort;       // Identify what is happening in the event.
                      // For PieNoon, use EventId in pie_noon_common.fbs.
  modifier:ushort;    // Meaning depends on 'event'. e.g. amount of damage.
}

table Timeline {
  end_time:ushort;
  renderables:[TimelineRenderable];
  accessories:[TimelineAccessory];
  sounds:[TimelineSound];
  events:[TimelineEvent];
}

root_type Timeline;
