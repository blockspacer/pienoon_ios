// automatically generated by the FlatBuffers compiler, do not modify

#ifndef FLATBUFFERS_GENERATED_SOUNDBANKDEF_PINDROP_H_
#define FLATBUFFERS_GENERATED_SOUNDBANKDEF_PINDROP_H_

#include "flatbuffers/flatbuffers.h"


namespace pindrop {

struct SoundBankDef;

struct SoundBankDef FLATBUFFERS_FINAL_CLASS : private flatbuffers::Table {
  const flatbuffers::Vector<flatbuffers::Offset<flatbuffers::String>> *filenames() const { return GetPointer<const flatbuffers::Vector<flatbuffers::Offset<flatbuffers::String>> *>(4); }
  bool Verify(flatbuffers::Verifier &verifier) const {
    return VerifyTableStart(verifier) &&
           VerifyField<flatbuffers::uoffset_t>(verifier, 4 /* filenames */) &&
           verifier.Verify(filenames()) &&
           verifier.VerifyVectorOfStrings(filenames()) &&
           verifier.EndTable();
  }
};

struct SoundBankDefBuilder {
  flatbuffers::FlatBufferBuilder &fbb_;
  flatbuffers::uoffset_t start_;
  void add_filenames(flatbuffers::Offset<flatbuffers::Vector<flatbuffers::Offset<flatbuffers::String>>> filenames) { fbb_.AddOffset(4, filenames); }
  SoundBankDefBuilder(flatbuffers::FlatBufferBuilder &_fbb) : fbb_(_fbb) { start_ = fbb_.StartTable(); }
  SoundBankDefBuilder &operator=(const SoundBankDefBuilder &);
  flatbuffers::Offset<SoundBankDef> Finish() {
    auto o = flatbuffers::Offset<SoundBankDef>(fbb_.EndTable(start_, 1));
    return o;
  }
};

inline flatbuffers::Offset<SoundBankDef> CreateSoundBankDef(flatbuffers::FlatBufferBuilder &_fbb,
   flatbuffers::Offset<flatbuffers::Vector<flatbuffers::Offset<flatbuffers::String>>> filenames = 0) {
  SoundBankDefBuilder builder_(_fbb);
  builder_.add_filenames(filenames);
  return builder_.Finish();
}

inline const SoundBankDef *GetSoundBankDef(const void *buf) { return flatbuffers::GetRoot<SoundBankDef>(buf); }

inline bool VerifySoundBankDefBuffer(flatbuffers::Verifier &verifier) { return verifier.VerifyBuffer<SoundBankDef>(); }

inline void FinishSoundBankDefBuffer(flatbuffers::FlatBufferBuilder &fbb, flatbuffers::Offset<SoundBankDef> root) { fbb.Finish(root); }

}  // namespace pindrop

#endif  // FLATBUFFERS_GENERATED_SOUNDBANKDEF_PINDROP_H_
